
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import static javax.accessibility.AccessibleRole.TABLE;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author R K PC
 */
public class INDAPURAPMC_UPDATE extends javax.swing.JFrame {

    PreparedStatement p,ps,pst,psts,pstm;
    ResultSet R,rs,rst;
    Connection con,cons,conss,cos;
    
    public INDAPURAPMC_UPDATE() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURID.setBorder(br);
        INDAPURNAME.setBorder(br);
        INDAPURRATE.setBorder(br);
        INDAPURDAY.setBorder(br);
        INDAPURMONTH.setBorder(br);
        INDAPURYEAR.setBorder(br);
        //ID2.setBorder(br);
        
        String url = "jdbc:mysql://localhost:3306/farm in hand";
        String user ="root";
        String pass = "";
        try
            {
                con = DriverManager.getConnection(url,user,pass);
                                
            }
        catch (Exception e)
        {}
                    
        Border gf = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        CLOS.setBorder(br);
        MIN.setBorder(br);
        BACK.setBorder(br);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        INDAPURTABLE = new javax.swing.JTable();
        INSERT_DB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        INDAPURID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        INDAPURNAME = new javax.swing.JTextField();
        INDAPURRATE = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        INDAPURDAY = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        INDAPURMONTH = new javax.swing.JTextField();
        INDAPURYEAR = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        VIEW_DB = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        MIN = new javax.swing.JLabel();
        CLOS = new javax.swing.JLabel();
        BACK = new javax.swing.JLabel();
        MAINWAAL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255, 90));

        INDAPURTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "RATE", "DAY", "MONTH", "YEAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(INDAPURTABLE);
        if (INDAPURTABLE.getColumnModel().getColumnCount() > 0) {
            INDAPURTABLE.getColumnModel().getColumn(0).setPreferredWidth(6);
            INDAPURTABLE.getColumnModel().getColumn(1).setResizable(false);
            INDAPURTABLE.getColumnModel().getColumn(2).setResizable(false);
            INDAPURTABLE.getColumnModel().getColumn(3).setResizable(false);
            INDAPURTABLE.getColumnModel().getColumn(4).setResizable(false);
            INDAPURTABLE.getColumnModel().getColumn(5).setResizable(false);
        }

        INSERT_DB.setBackground(new java.awt.Color(128, 128, 128));
        INSERT_DB.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        INSERT_DB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/add-list-24.png"))); // NOI18N
        INSERT_DB.setText(" INSERT DB");
        INSERT_DB.setBorder(null);
        INSERT_DB.setBorderPainted(false);
        INSERT_DB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        INSERT_DB.setOpaque(false);
        INSERT_DB.setSelected(true);
        INSERT_DB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                INSERT_DBFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                INSERT_DBFocusLost(evt);
            }
        });
        INSERT_DB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                INSERT_DBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INSERT_DBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INSERT_DBMouseExited(evt);
            }
        });
        INSERT_DB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERT_DBActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel1.setText("ID :");

        INDAPURID.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        INDAPURID.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        INDAPURID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INDAPURIDMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INDAPURIDMouseExited(evt);
            }
        });
        INDAPURID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                INDAPURIDKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel2.setText("NAME :");

        INDAPURNAME.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        INDAPURNAME.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        INDAPURNAME.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INDAPURNAMEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INDAPURNAMEMouseExited(evt);
            }
        });
        INDAPURNAME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                INDAPURNAMEKeyPressed(evt);
            }
        });

        INDAPURRATE.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        INDAPURRATE.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        INDAPURRATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INDAPURRATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INDAPURRATEMouseExited(evt);
            }
        });
        INDAPURRATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INDAPURRATEActionPerformed(evt);
            }
        });
        INDAPURRATE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                INDAPURRATEKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel3.setText("RATE :");

        INDAPURDAY.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        INDAPURDAY.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        INDAPURDAY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INDAPURDAYMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INDAPURDAYMouseExited(evt);
            }
        });
        INDAPURDAY.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                INDAPURDAYKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel4.setText("DAY :");

        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel5.setText("MONTH :");

        INDAPURMONTH.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        INDAPURMONTH.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        INDAPURMONTH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INDAPURMONTHMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INDAPURMONTHMouseExited(evt);
            }
        });
        INDAPURMONTH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                INDAPURMONTHKeyPressed(evt);
            }
        });

        INDAPURYEAR.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        INDAPURYEAR.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        INDAPURYEAR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INDAPURYEARMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INDAPURYEARMouseExited(evt);
            }
        });
        INDAPURYEAR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                INDAPURYEARKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel6.setText("YEAR :");

        VIEW_DB.setBackground(new java.awt.Color(128, 128, 128));
        VIEW_DB.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        VIEW_DB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/flow-chart-24.png"))); // NOI18N
        VIEW_DB.setText(" VIEW DB");
        VIEW_DB.setBorder(null);
        VIEW_DB.setBorderPainted(false);
        VIEW_DB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        VIEW_DB.setOpaque(false);
        VIEW_DB.setSelected(true);
        VIEW_DB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                VIEW_DBFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                VIEW_DBFocusLost(evt);
            }
        });
        VIEW_DB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VIEW_DBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                VIEW_DBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                VIEW_DBMouseExited(evt);
            }
        });
        VIEW_DB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VIEW_DBActionPerformed(evt);
            }
        });

        DELETE.setBackground(new java.awt.Color(128, 128, 128));
        DELETE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/delete-24.png"))); // NOI18N
        DELETE.setText(" DELETE REC.");
        DELETE.setBorder(null);
        DELETE.setBorderPainted(false);
        DELETE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DELETE.setOpaque(false);
        DELETE.setSelected(true);
        DELETE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DELETEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DELETEFocusLost(evt);
            }
        });
        DELETE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DELETEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DELETEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DELETEMouseExited(evt);
            }
        });
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        UPDATE.setBackground(new java.awt.Color(128, 128, 128));
        UPDATE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/available-updates-24.png"))); // NOI18N
        UPDATE.setText(" UPDATE DB");
        UPDATE.setBorder(null);
        UPDATE.setBorderPainted(false);
        UPDATE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UPDATE.setOpaque(false);
        UPDATE.setSelected(true);
        UPDATE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UPDATEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UPDATEFocusLost(evt);
            }
        });
        UPDATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UPDATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UPDATEMouseExited(evt);
            }
        });
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(INSERT_DB, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VIEW_DB, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(INDAPURID, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(INDAPURMONTH, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(INDAPURNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(INDAPURRATE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(INDAPURDAY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(INDAPURYEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(INDAPURID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(INDAPURNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(INDAPURRATE, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(INDAPURDAY, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(INDAPURMONTH, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(INDAPURYEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(INSERT_DB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VIEW_DB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 730, 330));

        MIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/MINIM.png"))); // NOI18N
        MIN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MINMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MINMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MINMouseExited(evt);
            }
        });
        getContentPane().add(MIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 27, 27));

        CLOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/redclose.png"))); // NOI18N
        CLOS.setText("x");
        CLOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CLOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CLOSMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CLOSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CLOSMouseExited(evt);
            }
        });
        getContentPane().add(CLOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 27, 27));

        BACK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/arrow-98-24.png"))); // NOI18N
        BACK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BACK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKMouseExited(evt);
            }
        });
        getContentPane().add(BACK, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        MAINWAAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/KISAN.png"))); // NOI18N
        getContentPane().add(MAINWAAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 450));

        setSize(new java.awt.Dimension(749, 451));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void INSERT_DBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERT_DBFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_DBFocusGained

    private void INSERT_DBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERT_DBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_DBFocusLost

    private void INSERT_DBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_DBMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_DBMouseClicked

    private void INSERT_DBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_DBMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        INSERT_DB.setBorder(panelm);
        INSERT_DB.setBackground(Color.GREEN);
        
    }//GEN-LAST:event_INSERT_DBMouseEntered

    private void INSERT_DBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_DBMouseExited
       Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        INSERT_DB.setBorder(panelm);
        INSERT_DB.setBackground(Color.GRAY);
        
    }//GEN-LAST:event_INSERT_DBMouseExited

    
    public boolean verifydata()
    {
        
        if(INDAPURID.getText().equals("") || INDAPURNAME.getText().equals("") || INDAPURRATE.getText().equals("") || INDAPURDAY.getText().equals("") || INDAPURMONTH.getText().equals("") || INDAPURYEAR.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "ALL FIELD'S ARE REQUIRED");
            return false;
            }
                else if (INDAPURID.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"CROP ID IS REQUIRED");
                         return false;
                    }
                  else if (INDAPURNAME.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"PLEAES ENTER CROP NAME");
                         return false;
                    }
                  else if(INDAPURRATE.getText().equals(""))
                    {
                        JOptionPane.showMessageDialog(this,"PLEASE MENTION YOUR CROP RATE");
                        return false;
                    }
                 else if (INDAPURDAY.getText().equals(""))
                     {
                          JOptionPane.showMessageDialog(this,"ENTER THE DAY");
                          return false;
                      }
                   else if (INDAPURMONTH.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"ENTER THE MONTH");
                         return false;
                    }
                    else if (INDAPURYEAR.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"PLEASE ENTER YEAR");
                         return false;
                    }
                    else 
                    {
                         return true;
                    }
    }
    
    
    
    private void INSERT_DBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERT_DBActionPerformed
      if (verifydata())
      {
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
            String sql = "INSERT INTO `indapur_update`(`ID`,`NAME`,`RATE`,`DAY`,`MONTH`,`YEAR`)VALUES (?,?,?,?,?,?)";
            p = con.prepareStatement(sql);
            
            p.setString(1, INDAPURID.getText());
            p.setString(2, INDAPURNAME.getText());
            p.setString(3, INDAPURRATE.getText());
            p.setString(4, INDAPURDAY.getText());
            p.setString(5, INDAPURMONTH.getText());
            p.setString(6, INDAPURYEAR.getText());

            p.executeUpdate();
            JOptionPane.showMessageDialog(this,INDAPURNAME.getText() + " IS SUCESSFULLY SAVED INTO DATABASE");

        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "INVALID","ERROR",JOptionPane.ERROR_MESSAGE);
        }
      }        
    }//GEN-LAST:event_INSERT_DBActionPerformed

    private void VIEW_DBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VIEW_DBActionPerformed

        
        String sql = "SELECT * FROM `indapur_update`"; 
            try 
            {
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                DefaultTableModel TBmodel = (DefaultTableModel)INDAPURTABLE.getModel();
                TBmodel.setNumRows(0);
                        while (rs.next())
                        {
                            TBmodel.addRow(new String[]{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                            
                        }
                
            }catch(Exception e){}
    }//GEN-LAST:event_VIEW_DBActionPerformed

    private void VIEW_DBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VIEW_DBMouseExited
       Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        VIEW_DB.setBorder(panelm);
        VIEW_DB.setBackground(Color.GRAY);
    }//GEN-LAST:event_VIEW_DBMouseExited

    private void VIEW_DBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VIEW_DBMouseEntered
        Border panem = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        VIEW_DB.setBorder(panem);
        VIEW_DB.setBackground(Color.GREEN); 
    }//GEN-LAST:event_VIEW_DBMouseEntered

    private void VIEW_DBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VIEW_DBMouseClicked
         
    }//GEN-LAST:event_VIEW_DBMouseClicked

    private void VIEW_DBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VIEW_DBFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_VIEW_DBFocusLost

    private void VIEW_DBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_VIEW_DBFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_VIEW_DBFocusGained

    private void DELETEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusGained

    private void DELETEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusLost

    private void DELETEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEMouseClicked

    private void DELETEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        DELETE.setBorder(panelm);
        DELETE.setBackground(Color.GREEN);
    }//GEN-LAST:event_DELETEMouseEntered

    private void DELETEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseExited
        Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        DELETE.setBorder(panelm);
        DELETE.setBackground(Color.GRAY);
    }//GEN-LAST:event_DELETEMouseExited

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
if (verifydata())
      {    try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection cos = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
            String sql = "DELETE FROM `indapur_update` WHERE ID = ?"; 
            pstm = cos.prepareStatement(sql);
            
            pstm.setString(1, INDAPURID.getText());
            pstm.executeUpdate();
            JOptionPane.showMessageDialog(this,"SUCESSFULLY DELETED!!!");
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "INVALID");
        }

      }     
    }//GEN-LAST:event_DELETEActionPerformed

    private void UPDATEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusGained

    private void UPDATEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusLost

    private void UPDATEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEMouseClicked

    private void UPDATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        UPDATE.setBorder(panelm);
        UPDATE.setBackground(Color.GREEN);
    }//GEN-LAST:event_UPDATEMouseEntered

    private void UPDATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseExited
        Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        UPDATE.setBorder(panelm);
        UPDATE.setBackground(Color.GRAY);
    }//GEN-LAST:event_UPDATEMouseExited

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
if (verifydata())
      {
         try
        {
        String v1 = INDAPURID.getText();
        String v2 = INDAPURNAME.getText();
        String v3 = INDAPURRATE.getText();
        String v4 = INDAPURDAY.getText();
        String v5 = INDAPURMONTH.getText();
        String v6 = INDAPURYEAR.getText();
        
        Class.forName("com.mysql.jdbc.Driver");
        Connection conss = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
        
        String str = "UPDATE indapur_update SET ID='"+v1+"', NAME='"+v2+"', RATE='"+v3+"', DAY='"+v4+"', MONTH='"+v5+"', YEAR='"+v6+"' WHERE ID='"+v1+"' ";
        psts=conss.prepareStatement(str);
        psts.execute();
        JOptionPane.showMessageDialog(null,INDAPURID.getText() +" "+ "IS UPDATED SUCESSFULLY ");
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"INVALID");
        }
      }
        
        
    }//GEN-LAST:event_UPDATEActionPerformed

    private void INDAPURIDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURIDMouseEntered
         Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        INDAPURID.setBorder(br);
        INDAPURID.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURIDMouseEntered

    private void INDAPURIDMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURIDMouseExited
      Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURID.setBorder(br);
        INDAPURID.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURIDMouseExited

    private void INDAPURNAMEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURNAMEMouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        INDAPURNAME.setBorder(br);
        INDAPURNAME.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURNAMEMouseEntered

    private void INDAPURNAMEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURNAMEMouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURNAME.setBorder(br);
        INDAPURNAME.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURNAMEMouseExited

    private void INDAPURRATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INDAPURRATEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_INDAPURRATEActionPerformed

    private void INDAPURRATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURRATEMouseEntered
      Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        INDAPURRATE.setBorder(br);
        INDAPURRATE.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURRATEMouseEntered

    private void INDAPURRATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURRATEMouseExited
         Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURRATE.setBorder(br);
        INDAPURRATE.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURRATEMouseExited

    private void INDAPURDAYMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURDAYMouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        INDAPURDAY.setBorder(br);
        INDAPURDAY.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURDAYMouseEntered

    private void INDAPURDAYMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURDAYMouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURDAY.setBorder(br);
        INDAPURDAY.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURDAYMouseExited

    private void INDAPURMONTHMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURMONTHMouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        INDAPURMONTH.setBorder(br);
        INDAPURMONTH.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURMONTHMouseEntered

    private void INDAPURMONTHMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURMONTHMouseExited
         Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURMONTH.setBorder(br);
        INDAPURMONTH.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURMONTHMouseExited

    private void INDAPURYEARMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURYEARMouseEntered
       Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        INDAPURYEAR.setBorder(br);
        INDAPURYEAR.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURYEARMouseEntered

    private void INDAPURYEARMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INDAPURYEARMouseExited
         Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        INDAPURYEAR.setBorder(br);
        INDAPURYEAR.setBackground(Color.white);
    }//GEN-LAST:event_INDAPURYEARMouseExited

    private void INDAPURIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INDAPURIDKeyPressed
        String phoneno =  INDAPURID.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<2)
           {
               INDAPURID.setEditable(true);
           }else
           {
               INDAPURID.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               INDAPURID.setEditable(true);
           }else
           {
               INDAPURID.setEditable(false);
           }
       }
    }//GEN-LAST:event_INDAPURIDKeyPressed

    private void INDAPURNAMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INDAPURNAMEKeyPressed
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c))
        {
            INDAPURNAME.setEditable(true);
        }else
        {
            INDAPURNAME.setEditable(false);
        }
    }//GEN-LAST:event_INDAPURNAMEKeyPressed

    private void INDAPURRATEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INDAPURRATEKeyPressed
        String phoneno =  INDAPURRATE.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<5)
           {
               INDAPURRATE.setEditable(true);
           }else
           {
               INDAPURRATE.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               INDAPURRATE.setEditable(true);
           }else
           {
               INDAPURRATE.setEditable(false);
           }
       }
    }//GEN-LAST:event_INDAPURRATEKeyPressed

    private void INDAPURDAYKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INDAPURDAYKeyPressed
        String phoneno =  INDAPURDAY.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='2')
       {
           if (length<2)
           {
               INDAPURDAY.setEditable(true);
           }else
           {
               INDAPURDAY.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               INDAPURDAY.setEditable(true);
           }else
           {
               INDAPURDAY.setEditable(false);
           }
       }
    }//GEN-LAST:event_INDAPURDAYKeyPressed

    private void INDAPURMONTHKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INDAPURMONTHKeyPressed
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c) || Character.isAlphabetic(c))
        {
            INDAPURMONTH.setEditable(true);
        }else
        {
            INDAPURMONTH.setEditable(false);
        }
    }//GEN-LAST:event_INDAPURMONTHKeyPressed

    private void INDAPURYEARKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_INDAPURYEARKeyPressed
        String phoneno =  INDAPURYEAR.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='4')
       {
           if (length<4)
           {
               INDAPURYEAR.setEditable(true);
           }else
           {
               INDAPURYEAR.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               INDAPURYEAR.setEditable(true);
           }else
           {
               INDAPURYEAR.setEditable(false);
           }
       }
    }//GEN-LAST:event_INDAPURYEARKeyPressed

    private void MINMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseEntered

    private void MINMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseExited

    private void CLOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseClicked
        this.dispose();
    }//GEN-LAST:event_CLOSMouseClicked

    private void CLOSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.red);
        CLOS.setBorder(panelCE);
    }//GEN-LAST:event_CLOSMouseEntered

    private void CLOSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        CLOS.setBorder(panelCE);
    }//GEN-LAST:event_CLOSMouseExited

    private void BACKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseClicked
        APMCADMINS_LOGIN LG = new APMCADMINS_LOGIN();
        LG.show();
        dispose();    }//GEN-LAST:event_BACKMouseClicked

    private void BACKMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        BACK.setBorder(panelm);
    }//GEN-LAST:event_BACKMouseEntered

    private void BACKMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseExited
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        BACK.setBorder(panelm);
    }//GEN-LAST:event_BACKMouseExited

    private void MINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseClicked
        this.setExtendedState(INDAPURAPMC_UPDATE.ICONIFIED);// TODO add your handling code here:
    }//GEN-LAST:event_MINMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(INDAPURAPMC_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(INDAPURAPMC_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(INDAPURAPMC_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(INDAPURAPMC_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new INDAPURAPMC_UPDATE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BACK;
    private javax.swing.JLabel CLOS;
    private javax.swing.JButton DELETE;
    private javax.swing.JTextField INDAPURDAY;
    private javax.swing.JTextField INDAPURID;
    private javax.swing.JTextField INDAPURMONTH;
    private javax.swing.JTextField INDAPURNAME;
    private javax.swing.JTextField INDAPURRATE;
    private javax.swing.JTable INDAPURTABLE;
    private javax.swing.JTextField INDAPURYEAR;
    private javax.swing.JButton INSERT_DB;
    private javax.swing.JLabel MAINWAAL;
    private javax.swing.JLabel MIN;
    private javax.swing.JButton UPDATE;
    private javax.swing.JButton VIEW_DB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private Connection getConnection() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
