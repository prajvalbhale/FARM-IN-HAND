
import java.awt.Color;
import static java.awt.Desktop.Action.PRINT;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author R K PC
 */
public class BMT_APMC extends javax.swing.JFrame {

   PreparedStatement p;
    ResultSet R;
    Connection con;
    
    public BMT_APMC() {
        initComponents();
        
        String url = "jdbc:mysql://localhost:3306/farm in hand";
        String user ="root";
        String pass = "";
        try
        {
            con = DriverManager.getConnection(url,user,pass);
        }catch(Exception A)
        {
            
        }
        
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BARAMATI = new javax.swing.JButton();
        BARAMATI1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BMTTABLE = new javax.swing.JTable();
        PRINT = new javax.swing.JButton();
        MAINWALL2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255,90));

        BARAMATI.setBackground(new java.awt.Color(128, 128, 128));
        BARAMATI.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        BARAMATI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/arrow-98-24.png"))); // NOI18N
        BARAMATI.setBorder(null);
        BARAMATI.setBorderPainted(false);
        BARAMATI.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BARAMATI.setOpaque(false);
        BARAMATI.setSelected(true);
        BARAMATI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BARAMATIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BARAMATIFocusLost(evt);
            }
        });
        BARAMATI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BARAMATIMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BARAMATIMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BARAMATIMouseExited(evt);
            }
        });

        BARAMATI1.setBackground(new java.awt.Color(128, 128, 128));
        BARAMATI1.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        BARAMATI1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/store-sign (1).png"))); // NOI18N
        BARAMATI1.setText(" SHOW DATA");
        BARAMATI1.setBorder(null);
        BARAMATI1.setBorderPainted(false);
        BARAMATI1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BARAMATI1.setOpaque(false);
        BARAMATI1.setSelected(true);
        BARAMATI1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BARAMATI1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BARAMATI1FocusLost(evt);
            }
        });
        BARAMATI1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BARAMATI1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BARAMATI1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BARAMATI1MouseExited(evt);
            }
        });
        BARAMATI1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BARAMATI1ActionPerformed(evt);
            }
        });

        BMTTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "RATE", "DAY", "MONTH", "YEAR"
            }
        ));
        jScrollPane1.setViewportView(BMTTABLE);

        PRINT.setBackground(new java.awt.Color(128, 128, 128));
        PRINT.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        PRINT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/printer-24.png"))); // NOI18N
        PRINT.setText(" PRINT");
        PRINT.setBorder(null);
        PRINT.setBorderPainted(false);
        PRINT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PRINT.setOpaque(false);
        PRINT.setSelected(true);
        PRINT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PRINTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PRINTFocusLost(evt);
            }
        });
        PRINT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PRINTMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PRINTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PRINTMouseExited(evt);
            }
        });
        PRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRINTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(BARAMATI, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BARAMATI1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PRINT, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BARAMATI, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BARAMATI1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addComponent(PRINT, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                        .addGap(7, 7, 7)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 540, 250));

        MAINWALL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/APMCM_BMT.png"))); // NOI18N
        getContentPane().add(MAINWALL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 500));

        setSize(new java.awt.Dimension(600, 500));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BARAMATIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BARAMATIFocusGained
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GRAY);
        BARAMATI.setBorder(panelm);
    }//GEN-LAST:event_BARAMATIFocusGained

    private void BARAMATIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BARAMATIFocusLost
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GREEN);
        BARAMATI.setBorder(panelm);
    }//GEN-LAST:event_BARAMATIFocusLost

    private void BARAMATIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BARAMATIMouseClicked
        APMCS BMP = new APMCS();
        BMP.show();
        this.dispose();
    }//GEN-LAST:event_BARAMATIMouseClicked

    private void BARAMATIMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BARAMATIMouseEntered
        Border panelm = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        BARAMATI.setBorder(panelm);
        BARAMATI.setBackground(Color.GREEN);
    }//GEN-LAST:event_BARAMATIMouseEntered

    private void BARAMATIMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BARAMATIMouseExited
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        BARAMATI.setBorder(panelm);
        BARAMATI.setBackground(Color.gray);
    }//GEN-LAST:event_BARAMATIMouseExited

    private void BARAMATI1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BARAMATI1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_BARAMATI1FocusGained

    private void BARAMATI1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BARAMATI1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_BARAMATI1FocusLost

    private void BARAMATI1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BARAMATI1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BARAMATI1MouseClicked

    private void BARAMATI1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BARAMATI1MouseEntered
        Border panelm = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        BARAMATI1.setBorder(panelm);
        BARAMATI1.setBackground(Color.GREEN);
    }//GEN-LAST:event_BARAMATI1MouseEntered

    private void BARAMATI1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BARAMATI1MouseExited
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        BARAMATI1.setBorder(panelm);
        BARAMATI1.setBackground(Color.gray);        
    }//GEN-LAST:event_BARAMATI1MouseExited

    private void BARAMATI1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BARAMATI1ActionPerformed
        String sql = "SELECT * FROM `bmt_update`"; 
            try 
            {
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                DefaultTableModel TBmodel = (DefaultTableModel)BMTTABLE.getModel();
                TBmodel.setNumRows(0);
                        while (rs.next())
                        {
                            TBmodel.addRow(new String[]{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                            
                            
                        }
                
                
                
            }catch(Exception e){}
    }//GEN-LAST:event_BARAMATI1ActionPerformed

    private void PRINTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PRINTFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_PRINTFocusGained

    private void PRINTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PRINTFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_PRINTFocusLost

    private void PRINTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PRINTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PRINTMouseClicked

    private void PRINTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PRINTMouseEntered
         Border panelA = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        PRINT.setBorder(panelA);
        PRINT.setBackground(Color.GREEN);
    }//GEN-LAST:event_PRINTMouseEntered

    private void PRINTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PRINTMouseExited
         Border panelA = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GRAY);
        PRINT.setBorder(panelA);
        PRINT.setBackground(Color.GRAY);
    }//GEN-LAST:event_PRINTMouseExited

    private void PRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRINTActionPerformed
        try 
        {
            BMTTABLE.print();
        }catch(Exception ec){}
    }//GEN-LAST:event_PRINTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BMT_APMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BMT_APMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BMT_APMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMT_APMC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMT_APMC().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BARAMATI;
    private javax.swing.JButton BARAMATI1;
    private javax.swing.JTable BMTTABLE;
    private javax.swing.JLabel MAINWALL2;
    private javax.swing.JButton PRINT;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
