
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author R K PC
 */
public class BMT_UPDATE extends javax.swing.JFrame {

    PreparedStatement p,ps,pst,stm,pstm;
    ResultSet R,rs,rst,result;
    Connection cons,con,co,cos;
    
    public BMT_UPDATE() {
        initComponents();
        
        
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        ID2.setBorder(br);
        CLOS.setBorder(br);
        MIN.setBorder(br);
        BACK.setBorder(br);
        
        Border brC = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        NAME2.setBorder(brC);
        
        Border brD = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        RATE2.setBorder(brD);
        
        
        Border brG = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        DAY2.setBorder(brG);
        
        Border brE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        MONTH2.setBorder(brE);
        
        Border brR = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        YEAR2.setBorder(brR);
        
        
        
        String urls = "jdbc:mysql://localhost:3306/farm in hand";
        String users ="root";
        String pas = "";
        try
        {
            cons = DriverManager.getConnection(urls,users,pas);
        }catch(Exception A)
        {
            
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ID2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NAME2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RATE2 = new javax.swing.JTextField();
        DAY2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MONTH2 = new javax.swing.JTextField();
        YEAR2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BMT_TABLES = new javax.swing.JTable();
        INSERTDB = new javax.swing.JButton();
        INSERTTABLE = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        CLOS = new javax.swing.JLabel();
        MIN = new javax.swing.JLabel();
        BACK = new javax.swing.JLabel();
        MAINWALL2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255,90));

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel1.setText("ID :");

        ID2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        ID2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ID2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ID2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ID2MouseExited(evt);
            }
        });
        ID2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ID2KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel2.setText("NAME :");

        NAME2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        NAME2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        NAME2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NAME2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NAME2MouseExited(evt);
            }
        });
        NAME2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NAME2KeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel3.setText("RATE :");

        RATE2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        RATE2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        RATE2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RATE2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RATE2MouseExited(evt);
            }
        });
        RATE2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RATE2KeyPressed(evt);
            }
        });

        DAY2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        DAY2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        DAY2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DAY2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DAY2MouseExited(evt);
            }
        });
        DAY2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DAY2KeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel4.setText("DAY :");

        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel5.setText("MONTH :");

        MONTH2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        MONTH2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        MONTH2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MONTH2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MONTH2MouseExited(evt);
            }
        });
        MONTH2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MONTH2KeyPressed(evt);
            }
        });

        YEAR2.setFont(new java.awt.Font("Cambria Math", 0, 14)); // NOI18N
        YEAR2.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        YEAR2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                YEAR2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                YEAR2MouseExited(evt);
            }
        });
        YEAR2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                YEAR2KeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel6.setText("YEAR :");

        BMT_TABLES.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "RATE", "DAY", "MONTH", "YEAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BMT_TABLES);
        if (BMT_TABLES.getColumnModel().getColumnCount() > 0) {
            BMT_TABLES.getColumnModel().getColumn(0).setPreferredWidth(6);
            BMT_TABLES.getColumnModel().getColumn(1).setResizable(false);
            BMT_TABLES.getColumnModel().getColumn(2).setResizable(false);
            BMT_TABLES.getColumnModel().getColumn(3).setResizable(false);
            BMT_TABLES.getColumnModel().getColumn(4).setResizable(false);
            BMT_TABLES.getColumnModel().getColumn(5).setResizable(false);
        }

        INSERTDB.setBackground(new java.awt.Color(128, 128, 128));
        INSERTDB.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        INSERTDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/add-list-24.png"))); // NOI18N
        INSERTDB.setText(" INSERT DB");
        INSERTDB.setBorder(null);
        INSERTDB.setBorderPainted(false);
        INSERTDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        INSERTDB.setOpaque(false);
        INSERTDB.setSelected(true);
        INSERTDB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                INSERTDBFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                INSERTDBFocusLost(evt);
            }
        });
        INSERTDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                INSERTDBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INSERTDBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INSERTDBMouseExited(evt);
            }
        });
        INSERTDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERTDBActionPerformed(evt);
            }
        });

        INSERTTABLE.setBackground(new java.awt.Color(128, 128, 128));
        INSERTTABLE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        INSERTTABLE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/flow-chart-24.png"))); // NOI18N
        INSERTTABLE.setText(" VIEW DB");
        INSERTTABLE.setBorder(null);
        INSERTTABLE.setBorderPainted(false);
        INSERTTABLE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        INSERTTABLE.setOpaque(false);
        INSERTTABLE.setSelected(true);
        INSERTTABLE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                INSERTTABLEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                INSERTTABLEFocusLost(evt);
            }
        });
        INSERTTABLE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                INSERTTABLEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INSERTTABLEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INSERTTABLEMouseExited(evt);
            }
        });
        INSERTTABLE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERTTABLEActionPerformed(evt);
            }
        });

        UPDATE.setBackground(new java.awt.Color(128, 128, 128));
        UPDATE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/available-updates-24.png"))); // NOI18N
        UPDATE.setText(" UPDATE DB");
        UPDATE.setBorder(null);
        UPDATE.setBorderPainted(false);
        UPDATE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UPDATE.setOpaque(false);
        UPDATE.setSelected(true);
        UPDATE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UPDATEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UPDATEFocusLost(evt);
            }
        });
        UPDATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UPDATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UPDATEMouseExited(evt);
            }
        });
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        DELETE.setBackground(new java.awt.Color(128, 128, 128));
        DELETE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/delete-24.png"))); // NOI18N
        DELETE.setText(" DELETE REC.");
        DELETE.setBorder(null);
        DELETE.setBorderPainted(false);
        DELETE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DELETE.setOpaque(false);
        DELETE.setSelected(true);
        DELETE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DELETEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DELETEFocusLost(evt);
            }
        });
        DELETE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DELETEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DELETEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DELETEMouseExited(evt);
            }
        });
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MONTH2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ID2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(NAME2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(RATE2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DAY2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(YEAR2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(INSERTDB, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(INSERTTABLE, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DELETE, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(ID2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(NAME2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RATE2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(DAY2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(MONTH2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(YEAR2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(INSERTDB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INSERTTABLE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 730, 330));

        CLOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/redclose.png"))); // NOI18N
        CLOS.setText("x");
        CLOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CLOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CLOSMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CLOSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CLOSMouseExited(evt);
            }
        });
        getContentPane().add(CLOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 27, 27));

        MIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/MINIM.png"))); // NOI18N
        MIN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MINMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MINMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MINMouseExited(evt);
            }
        });
        getContentPane().add(MIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 27, 27));

        BACK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/arrow-98-24.png"))); // NOI18N
        BACK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BACK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKMouseExited(evt);
            }
        });
        getContentPane().add(BACK, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        MAINWALL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/KISAN.png"))); // NOI18N
        getContentPane().add(MAINWALL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 450));

        setSize(new java.awt.Dimension(750, 451));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void INSERTDBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERTDBFocusGained
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GRAY);
        INSERTDB.setBorder(panelm);
    }//GEN-LAST:event_INSERTDBFocusGained

    private void INSERTDBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERTDBFocusLost
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GREEN);
        INSERTDB.setBorder(panelm);
    }//GEN-LAST:event_INSERTDBFocusLost

    private void INSERTDBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERTDBMouseClicked
        //BARAMATI_APMC BMP = new BARAMATI_APMC();
        //BMP.show();
        //this.dispose();
    }//GEN-LAST:event_INSERTDBMouseClicked

    private void INSERTDBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERTDBMouseEntered
        Border panelm = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        INSERTDB.setBorder(panelm);
        INSERTDB.setBackground(Color.GREEN);
    }//GEN-LAST:event_INSERTDBMouseEntered

    private void INSERTDBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERTDBMouseExited
        Border panelm = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.gray);
        INSERTDB.setBorder(panelm);
        INSERTDB.setBackground(Color.gray);
    }//GEN-LAST:event_INSERTDBMouseExited

    private void INSERTTABLEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERTTABLEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERTTABLEFocusGained

    private void INSERTTABLEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERTTABLEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERTTABLEFocusLost

    private void INSERTTABLEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERTTABLEMouseClicked
        
        
    }//GEN-LAST:event_INSERTTABLEMouseClicked

    private void INSERTTABLEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERTTABLEMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        INSERTTABLE.setBorder(panelm);
        INSERTTABLE.setBackground(Color.GREEN);
    }//GEN-LAST:event_INSERTTABLEMouseEntered

    private void INSERTTABLEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERTTABLEMouseExited
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.gray);
        INSERTTABLE.setBorder(panelm);
        INSERTTABLE.setBackground(Color.gray);
    }//GEN-LAST:event_INSERTTABLEMouseExited

    private void INSERTTABLEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERTTABLEActionPerformed
    String sqlr = "SELECT * FROM `bmt_update`"; 
            try 
            {
                PreparedStatement ps = cons.prepareStatement(sqlr);
                ResultSet rs = ps.executeQuery();
                DefaultTableModel TBmodel = (DefaultTableModel)BMT_TABLES.getModel();
                TBmodel.setNumRows(0);
                        while (rs.next())
                        {
                            TBmodel.addRow(new String[]{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                            
                            
                        }     
            }catch(Exception A){}                                      

        
        
        
        /*if(ID2.getText().equals("") || NAME2.getText().equals("") || RATE2.getText().equals("") || DAY2.getText().equals("") || MONTH2.getText().equals("") || YEAR2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "ALL FIELDS ARE REUIRED TO FILL");
            //JOptionPane.showMessageDialog(this,"ALL FIELS ARE REUIRED TO FILL");
        }
        else
        {
            String data[] = {ID2.getText(),NAME2.getText(),RATE2.getText(),DAY2.getText(),MONTH2.getText(),YEAR2.getText()};

            DefaultTableModel tblModel = (DefaultTableModel) BMTTABLE.getModel();
            tblModel.addRow(data);
            JOptionPane.showMessageDialog(this,"DATA INSERTED SUCESSFULLY");
            ID2.setText("");
            NAME2.setText("");
            RATE2.setText("");
            DAY2.setText("");
            MONTH2.setText("");
            YEAR2.setText("");
        }*/
    }//GEN-LAST:event_INSERTTABLEActionPerformed

    
    public boolean verifydata()
    {
        
   if(ID2.getText().equals("") || NAME2.getText().equals("") || RATE2.getText().equals("") || DAY2.getText().equals("") || MONTH2.getText().equals("") || YEAR2.getText().equals(""))        {
            JOptionPane.showMessageDialog(this, "ALL FIELD'S ARE REQUIRED");
            return false;
            }
                else if (ID2.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"CROP ID IS REQUIRED");
                         return false;
                    }
                  else if (NAME2.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"PLEAES ENTER CROP NAME");
                         return false;
                    }
                  else if(RATE2.getText().equals(""))
                    {
                        JOptionPane.showMessageDialog(this,"PLEASE MENTION YOUR CROP RATE");
                        return false;
                    }
                 else if (DAY2.getText().equals(""))
                     {
                          JOptionPane.showMessageDialog(this,"ENTER THE DAY");
                          return false;
                      }
                   else if (MONTH2.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"ENTER THE MONTH");
                         return false;
                    }
                    else if (YEAR2.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"PLEASE ENTER YEAR");
                         return false;
                    }
                    else 
                    {
                         return true;
                    }
    }
    
    
    
    private void INSERTDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERTDBActionPerformed
        if (verifydata())
        {
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
            String sql = "INSERT INTO `bmt_update`(`ID`, `NAME`, `RATE`, `DAY`, `MONTH`, `YEAR`) VALUES (?,?,?,?,?,?)";
            p = con.prepareStatement(sql);            
        
            p.setString(1, ID2.getText());
            p.setString(2, NAME2.getText());
            p.setString(3, RATE2.getText());
            p.setString(4, DAY2.getText());
            p.setString(5, MONTH2.getText());
            p.setString(6, YEAR2.getText());
            
            p.executeUpdate();
            JOptionPane.showMessageDialog(this,NAME2.getText() + " IS SUCESSFULLY SAVED INTO DATABASE.");
            
        }
        
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this,"INVALID","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_INSERTDBActionPerformed

    private void ID2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID2KeyPressed
        String phoneno =  ID2.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<2)
           {
               ID2.setEditable(true);
           }else
           {
               ID2.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               ID2.setEditable(true);
           }else
           {
               ID2.setEditable(false);
           }
       }
    }//GEN-LAST:event_ID2KeyPressed

    private void ID2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ID2MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        ID2.setBorder(br);
        ID2.setBackground(Color.white);
    }//GEN-LAST:event_ID2MouseEntered

    private void ID2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ID2MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        ID2.setBorder(br);
        ID2.setBackground(Color.white);
    }//GEN-LAST:event_ID2MouseExited

    private void NAME2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NAME2MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        NAME2.setBorder(br);
        NAME2.setBackground(Color.white);
    }//GEN-LAST:event_NAME2MouseEntered

    private void NAME2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NAME2MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        NAME2.setBorder(br);
        NAME2.setBackground(Color.white);
    }//GEN-LAST:event_NAME2MouseExited

    private void RATE2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RATE2MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        RATE2.setBorder(br);
        RATE2.setBackground(Color.white);
    }//GEN-LAST:event_RATE2MouseEntered

    private void RATE2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RATE2MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        RATE2.setBorder(br);
        RATE2.setBackground(Color.white);
    }//GEN-LAST:event_RATE2MouseExited

    private void DAY2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAY2MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        DAY2.setBorder(br);
        DAY2.setBackground(Color.white);
    }//GEN-LAST:event_DAY2MouseEntered

    private void DAY2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAY2MouseExited
       Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        DAY2.setBorder(br);
        DAY2.setBackground(Color.white);
    }//GEN-LAST:event_DAY2MouseExited

    private void MONTH2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MONTH2MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        MONTH2.setBorder(br);
        MONTH2.setBackground(Color.white);
    }//GEN-LAST:event_MONTH2MouseEntered

    private void MONTH2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MONTH2MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        MONTH2.setBorder(br);
        MONTH2.setBackground(Color.white);
    }//GEN-LAST:event_MONTH2MouseExited

    private void YEAR2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YEAR2MouseEntered
         Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        YEAR2.setBorder(br);
        YEAR2.setBackground(Color.white);
    }//GEN-LAST:event_YEAR2MouseEntered

    private void YEAR2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YEAR2MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        YEAR2.setBorder(br);
        YEAR2.setBackground(Color.white);
    }//GEN-LAST:event_YEAR2MouseExited

    private void UPDATEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusGained

    private void UPDATEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusLost

    private void UPDATEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEMouseClicked

    private void UPDATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseEntered
       Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        UPDATE.setBorder(panelm);
        UPDATE.setBackground(Color.GREEN);        
    }//GEN-LAST:event_UPDATEMouseEntered

    private void UPDATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseExited
        
        Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        UPDATE.setBorder(panelm);
        UPDATE.setBackground(Color.GRAY);
        
    }//GEN-LAST:event_UPDATEMouseExited

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
            if (verifydata())
        {
        try
        {
        String v1 = ID2.getText();
        String v2 = NAME2.getText();
        String v3 = RATE2.getText();
        String v4 = DAY2.getText();
        String v5 = MONTH2.getText();
        String v6 = YEAR2.getText();
        
        Class.forName("com.mysql.jdbc.Driver");
        Connection cons = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
        
        String str = "UPDATE bmt_update SET ID='"+v1+"', NAME='"+v2+"', RATE='"+v3+"', DAY='"+v4+"', MONTH='"+v5+"', YEAR='"+v6+"' WHERE ID='"+v1+"' ";
        pst=cons.prepareStatement(str);
        pst.execute();
        JOptionPane.showMessageDialog(null,ID2.getText() +" "+ "IS UPDATED SUCESSFULLY ");
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"INVALID");
        }
        }
        
    }//GEN-LAST:event_UPDATEActionPerformed

    private void DELETEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusGained

    private void DELETEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusLost

    private void DELETEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEMouseClicked

    private void DELETEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        DELETE.setBorder(panelm);
        DELETE.setBackground(Color.GREEN);
    }//GEN-LAST:event_DELETEMouseEntered

    private void DELETEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseExited
        Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        DELETE.setBorder(panelm);
        DELETE.setBackground(Color.GRAY);
    }//GEN-LAST:event_DELETEMouseExited

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
if (verifydata())
        {
       try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection cos = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
            String dele = "DELETE FROM `bmt_update` WHERE ID=?";
            PreparedStatement pstm = cos.prepareStatement(dele);
            pstm.setString(1,ID2.getText());
            pstm.executeUpdate();
            JOptionPane.showMessageDialog(null,ID2.getText()+" "+"RECORD'S ARE DELETED SUCESSFULLY");
            
        
        
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(this," INVALID");
        }
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void NAME2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NAME2KeyPressed
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c))
        {
            NAME2.setEditable(true);
        }else
        {
            NAME2.setEditable(false);
        }
        
    }//GEN-LAST:event_NAME2KeyPressed

    private void RATE2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RATE2KeyPressed
        String phoneno =  RATE2.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<5)
           {
               RATE2.setEditable(true);
           }else
           {
               RATE2.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               RATE2.setEditable(true);
           }else
           {
               RATE2.setEditable(false);
           }
       }
    }//GEN-LAST:event_RATE2KeyPressed

    private void DAY2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DAY2KeyPressed
        String phoneno =  DAY2.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='2')
       {
           if (length<2)
           {
               DAY2.setEditable(true);
           }else
           {
               DAY2.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               DAY2.setEditable(true);
           }else
           {
               DAY2.setEditable(false);
           }
       }
    }//GEN-LAST:event_DAY2KeyPressed

    private void MONTH2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MONTH2KeyPressed
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c) || Character.isAlphabetic(c))
        {
            MONTH2.setEditable(true);
        }else
        {
            MONTH2.setEditable(false);
        }
    }//GEN-LAST:event_MONTH2KeyPressed

    private void YEAR2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_YEAR2KeyPressed
       String phoneno =  YEAR2.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='4')
       {
           if (length<4)
           {
               YEAR2.setEditable(true);
           }else
           {
               YEAR2.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               YEAR2.setEditable(true);
           }else
           {
               YEAR2.setEditable(false);
           }
       }
    }//GEN-LAST:event_YEAR2KeyPressed

    private void CLOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseClicked
        this.dispose();
    }//GEN-LAST:event_CLOSMouseClicked

    private void CLOSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.red);
        CLOS.setBorder(panelCE);
    }//GEN-LAST:event_CLOSMouseEntered

    private void CLOSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        CLOS.setBorder(panelCE);
    }//GEN-LAST:event_CLOSMouseExited

    private void MINMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseEntered

    private void MINMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseExited

    private void BACKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseClicked
        APMCADMINS_LOGIN LG = new APMCADMINS_LOGIN();
        LG.show();
        dispose();    }//GEN-LAST:event_BACKMouseClicked

    private void BACKMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        BACK.setBorder(panelm);
    }//GEN-LAST:event_BACKMouseEntered

    private void BACKMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseExited
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        BACK.setBorder(panelm);
    }//GEN-LAST:event_BACKMouseExited

    private void MINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseClicked
        this.setExtendedState(BMT_UPDATE.ICONIFIED);// TODO add your handling code here:
    }//GEN-LAST:event_MINMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BMT_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BMT_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BMT_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMT_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMT_UPDATE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BACK;
    private javax.swing.JTable BMT_TABLES;
    private javax.swing.JLabel CLOS;
    private javax.swing.JTextField DAY2;
    private javax.swing.JButton DELETE;
    private javax.swing.JTextField ID2;
    private javax.swing.JButton INSERTDB;
    private javax.swing.JButton INSERTTABLE;
    private javax.swing.JLabel MAINWALL2;
    private javax.swing.JLabel MIN;
    private javax.swing.JTextField MONTH2;
    private javax.swing.JTextField NAME2;
    private javax.swing.JTextField RATE2;
    private javax.swing.JButton UPDATE;
    private javax.swing.JTextField YEAR2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
