
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author R K PC
 */
public class AKLUJ_UPDATE extends javax.swing.JFrame {

    PreparedStatement p,pst,pstm;
    ResultSet R,rst;
    Connection con,cons,cos;
    Statement st;
    
    public AKLUJ_UPDATE() {
        initComponents();
                
        this.setLocationRelativeTo(null);
        
        String ABC = "jdbc:mysql://localhost:3306/farm in hand";
        String use ="root";
        String password = "";
        try
            {
                con = DriverManager.getConnection(ABC,use,password);
                                
            }
        catch (Exception e)
        {}
        
        Border gh = BorderFactory.createMatteBorder(2,2, 2, 2, Color.black);
        CLOS.setBorder(gh);
        MIN.setBorder(gh);
        BACK.setBorder(gh);

        
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        ID1.setBorder(br);
        
        Border brC = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        NAME1.setBorder(brC);
        
        Border brD = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        RATE1.setBorder(brD);
        
        
        Border brG = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        DAY1.setBorder(brG);
        
        Border brE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        MONTH1.setBorder(brE);
        
        Border brR = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        YEAR1.setBorder(brR);
        
        //Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        //ID1.setBorder(br);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ID1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NAME1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RATE1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        DAY1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        MONTH1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        YEAR1 = new javax.swing.JTextField();
        INSERT_BT = new javax.swing.JButton();
        INSERT_DBBTN = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AK_UPDATE = new javax.swing.JTable();
        BACK = new javax.swing.JLabel();
        CLOS = new javax.swing.JLabel();
        MIN = new javax.swing.JLabel();
        MAINWALL2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel1.setText("ID :");

        ID1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        ID1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ID1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ID1MouseExited(evt);
            }
        });
        ID1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ID1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ID1KeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel2.setText("NAME :");

        NAME1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        NAME1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NAME1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NAME1MouseExited(evt);
            }
        });
        NAME1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NAME1KeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel3.setText("RATE :");

        RATE1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        RATE1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RATE1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RATE1MouseExited(evt);
            }
        });
        RATE1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RATE1KeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel4.setText("DAY :");

        DAY1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        DAY1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DAY1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DAY1MouseExited(evt);
            }
        });
        DAY1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DAY1KeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel5.setText("MONTH :");

        MONTH1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        MONTH1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MONTH1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MONTH1MouseExited(evt);
            }
        });
        MONTH1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MONTH1KeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel6.setText("YEAR :");

        YEAR1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        YEAR1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                YEAR1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                YEAR1MouseExited(evt);
            }
        });
        YEAR1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                YEAR1KeyPressed(evt);
            }
        });

        INSERT_BT.setBackground(new java.awt.Color(128, 128, 128));
        INSERT_BT.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        INSERT_BT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/flow-chart-24.png"))); // NOI18N
        INSERT_BT.setText(" VIEW DB");
        INSERT_BT.setBorder(null);
        INSERT_BT.setBorderPainted(false);
        INSERT_BT.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        INSERT_BT.setOpaque(false);
        INSERT_BT.setSelected(true);
        INSERT_BT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                INSERT_BTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                INSERT_BTFocusLost(evt);
            }
        });
        INSERT_BT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                INSERT_BTMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INSERT_BTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INSERT_BTMouseExited(evt);
            }
        });
        INSERT_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERT_BTActionPerformed(evt);
            }
        });

        INSERT_DBBTN.setBackground(new java.awt.Color(128, 128, 128));
        INSERT_DBBTN.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        INSERT_DBBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/add-list-24.png"))); // NOI18N
        INSERT_DBBTN.setText(" INSERT DB");
        INSERT_DBBTN.setBorder(null);
        INSERT_DBBTN.setBorderPainted(false);
        INSERT_DBBTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        INSERT_DBBTN.setOpaque(false);
        INSERT_DBBTN.setSelected(true);
        INSERT_DBBTN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                INSERT_DBBTNFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                INSERT_DBBTNFocusLost(evt);
            }
        });
        INSERT_DBBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                INSERT_DBBTNMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                INSERT_DBBTNMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                INSERT_DBBTNMouseExited(evt);
            }
        });
        INSERT_DBBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INSERT_DBBTNActionPerformed(evt);
            }
        });

        UPDATE.setBackground(new java.awt.Color(128, 128, 128));
        UPDATE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/available-updates-24.png"))); // NOI18N
        UPDATE.setText(" UPDATE DB");
        UPDATE.setBorder(null);
        UPDATE.setBorderPainted(false);
        UPDATE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UPDATE.setOpaque(false);
        UPDATE.setSelected(true);
        UPDATE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UPDATEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UPDATEFocusLost(evt);
            }
        });
        UPDATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UPDATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UPDATEMouseExited(evt);
            }
        });
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        DELETE.setBackground(new java.awt.Color(128, 128, 128));
        DELETE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/delete-24.png"))); // NOI18N
        DELETE.setText(" DELETE REC.");
        DELETE.setBorder(null);
        DELETE.setBorderPainted(false);
        DELETE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DELETE.setOpaque(false);
        DELETE.setSelected(true);
        DELETE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DELETEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DELETEFocusLost(evt);
            }
        });
        DELETE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DELETEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DELETEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DELETEMouseExited(evt);
            }
        });
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        AK_UPDATE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "RATE", "DAY", "MONTH", "YEAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AK_UPDATE);
        if (AK_UPDATE.getColumnModel().getColumnCount() > 0) {
            AK_UPDATE.getColumnModel().getColumn(0).setPreferredWidth(6);
            AK_UPDATE.getColumnModel().getColumn(1).setResizable(false);
            AK_UPDATE.getColumnModel().getColumn(2).setResizable(false);
            AK_UPDATE.getColumnModel().getColumn(3).setResizable(false);
            AK_UPDATE.getColumnModel().getColumn(4).setResizable(false);
            AK_UPDATE.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(NAME1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(RATE1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DAY1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MONTH1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(INSERT_DBBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(INSERT_BT, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ID1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(YEAR1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(ID1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(NAME1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(RATE1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(DAY1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(MONTH1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(YEAR1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(INSERT_DBBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INSERT_BT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 730, 330));

        BACK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/arrow-98-24.png"))); // NOI18N
        BACK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BACK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKMouseExited(evt);
            }
        });
        getContentPane().add(BACK, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        CLOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/redclose.png"))); // NOI18N
        CLOS.setText("x");
        CLOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CLOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CLOSMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CLOSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CLOSMouseExited(evt);
            }
        });
        getContentPane().add(CLOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 10, 27, 27));

        MIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/MINIM.png"))); // NOI18N
        MIN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MINMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MINMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MINMouseExited(evt);
            }
        });
        getContentPane().add(MIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 27, 27));

        MAINWALL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/KISAN.png"))); // NOI18N
        getContentPane().add(MAINWALL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 450));

        setSize(new java.awt.Dimension(750, 451));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void INSERT_BTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERT_BTFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_BTFocusGained

    private void INSERT_BTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERT_BTFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_BTFocusLost

    private void INSERT_BTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_BTMouseClicked
//        AKLUJ_APMC AP = new AKLUJ_APMC();
//        AP.show();
    }//GEN-LAST:event_INSERT_BTMouseClicked

    private void INSERT_BTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_BTMouseEntered
        Border panelm = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        INSERT_BT.setBorder(panelm);
        INSERT_BT.setBackground(Color.GREEN);
    }//GEN-LAST:event_INSERT_BTMouseEntered

    private void INSERT_BTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_BTMouseExited
        Border panelm = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GRAY);
        INSERT_BT.setBorder(panelm);
        INSERT_BT.setBackground(Color.GRAY);
    }//GEN-LAST:event_INSERT_BTMouseExited

    
    
    private void INSERT_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERT_BTActionPerformed
       
        
        String sql = "SELECT * FROM `akluj_update`"; 
            try 
            {
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                DefaultTableModel TBmodel = (DefaultTableModel)AK_UPDATE.getModel();
                TBmodel.setNumRows(0);
                        while (rs.next())
                        {
                            TBmodel.addRow(new String[]{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});                          
                        }              
            }catch(Exception e){}
        
    }//GEN-LAST:event_INSERT_BTActionPerformed

    private void INSERT_DBBTNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERT_DBBTNFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_DBBTNFocusGained

    private void INSERT_DBBTNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_INSERT_DBBTNFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_DBBTNFocusLost

    private void INSERT_DBBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_DBBTNMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_INSERT_DBBTNMouseClicked

    private void INSERT_DBBTNMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_DBBTNMouseEntered
        Border panelm = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        INSERT_DBBTN.setBorder(panelm);
        INSERT_DBBTN.setBackground(Color.GREEN);
    }//GEN-LAST:event_INSERT_DBBTNMouseEntered

    private void INSERT_DBBTNMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_INSERT_DBBTNMouseExited
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.gray);
        INSERT_DBBTN.setBorder(panelm);
        INSERT_DBBTN.setBackground(Color.gray);
    }//GEN-LAST:event_INSERT_DBBTNMouseExited

    
    
    
    public boolean verifydata()
    {
        
        if(ID1.getText().equals("") || NAME1.getText().equals("") || RATE1.getText().equals("") || DAY1.getText().equals("") || MONTH1.getText().equals("") || YEAR1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "ALL FIELD'S ARE REQUIRED");
            return false;
            }
                else if (ID1.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"CROP ID IS REQUIRED");
                         return false;
                    }
                  else if (NAME1.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"PLEAES ENTER CROP NAME");
                         return false;
                    }
                  else if(RATE1.getText().equals(""))
                    {
                        JOptionPane.showMessageDialog(this,"PLEASE MENTION YOUR CROP RATE");
                        return false;
                    }
                 else if (DAY1.getText().equals(""))
                     {
                          JOptionPane.showMessageDialog(this,"ENTER THE DAY");
                          return false;
                      }
                   else if (MONTH1.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"ENTER THE MONTH");
                         return false;
                    }
                    else if (YEAR1.getText().equals(""))
                    {
                         JOptionPane.showMessageDialog(this,"PLEASE ENTER YEAR");
                         return false;
                    }
                    else 
                    {
                         return true;
                    }
    }
    
    
    
    
    private void INSERT_DBBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INSERT_DBBTNActionPerformed

        
        if (verifydata())
        {
        //EXECUTE DATA INTO THE DATABASE
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
            String sql = "INSERT INTO `akluj_update`(`ID`, `NAME`, `RATE`, `DAY`, `MONTH`, `YEAR`) VALUES (?,?,?,?,?,?)";
            p = con.prepareStatement(sql);
            
            p.setString(1, ID1.getText());
            p.setString(2, NAME1.getText());
            p.setString(3, RATE1.getText());
            p.setString(4, DAY1.getText());
            p.setString(5, MONTH1.getText());
            p.setString(6, YEAR1.getText());
            
            p.executeUpdate();
            JOptionPane.showMessageDialog(this,NAME1.getText() + "IS SUCESSFULLY SAVED INTO THE DATABASE.");
            
        }
        
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(this," INVALID ");
        }
        }
    }//GEN-LAST:event_INSERT_DBBTNActionPerformed

    private void RATE1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RATE1KeyPressed
       String phoneno =  RATE1.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<5)
           {
               RATE1.setEditable(true);
           }else
           {
               RATE1.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               RATE1.setEditable(true);
           }else
           {
               RATE1.setEditable(false);
           }
       }
    }//GEN-LAST:event_RATE1KeyPressed

    private void YEAR1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_YEAR1KeyPressed
       String phoneno =  YEAR1.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<4)
           {
               YEAR1.setEditable(true);
           }else
           {
               YEAR1.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               YEAR1.setEditable(true);
           }else
           {
               YEAR1.setEditable(false);
           }
       }
    }//GEN-LAST:event_YEAR1KeyPressed

    private void NAME1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NAME1KeyPressed
        
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c))
        {
            NAME1.setEditable(true);
        }else
        {
            NAME1.setEditable(false);
        }

    }//GEN-LAST:event_NAME1KeyPressed

    private void DAY1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DAY1KeyPressed
       String phoneno =  DAY1.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<2)
           {
               DAY1.setEditable(true);
           }else
           {
               DAY1.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               DAY1.setEditable(true);
           }else
           {
               DAY1.setEditable(false);
           }
       }
    }//GEN-LAST:event_DAY1KeyPressed

    private void MONTH1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MONTH1KeyPressed
        char c = evt.getKeyChar();
        if (Character.isLetter(c) || Character.isWhitespace(c)|| Character.isISOControl(c) || Character.isAlphabetic(c))
        {
            MONTH1.setEditable(true);
        }else
        {
            MONTH1.setEditable(false);
        }
    }//GEN-LAST:event_MONTH1KeyPressed

    private void ID1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID1KeyPressed
       String phoneno =  ID1.getText();
       int length = phoneno.length();
       char c = evt.getKeyChar();
       if (evt.getKeyChar() >= '0' && evt.getKeyChar()<='9')
       {
           if (length<2)
           {
               ID1.setEditable(true);
           }else
           {
               ID1.setEditable(false);
           }
       }else
       {
           if (evt.getExtendedKeyCode() == KeyEvent.VK_BACKSPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE)
           {
               ID1.setEditable(true);
           }else
           {
               ID1.setEditable(false);
           }
       }
    }//GEN-LAST:event_ID1KeyPressed

    private void ID1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ID1MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        ID1.setBorder(br);
        ID1.setBackground(Color.white);
    }//GEN-LAST:event_ID1MouseEntered

    private void ID1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ID1MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        ID1.setBorder(br);
        ID1.setBackground(Color.white);
    }//GEN-LAST:event_ID1MouseExited

    private void NAME1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NAME1MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        NAME1.setBorder(br);
        NAME1.setBackground(Color.white);
    }//GEN-LAST:event_NAME1MouseEntered

    private void NAME1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NAME1MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        NAME1.setBorder(br);
        NAME1.setBackground(Color.white);
    }//GEN-LAST:event_NAME1MouseExited

    private void RATE1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RATE1MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        RATE1.setBorder(br);
        RATE1.setBackground(Color.white);
    }//GEN-LAST:event_RATE1MouseEntered

    private void RATE1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RATE1MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        RATE1.setBorder(br);
        RATE1.setBackground(Color.white);
    }//GEN-LAST:event_RATE1MouseExited

    private void DAY1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAY1MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        DAY1.setBorder(br);
        DAY1.setBackground(Color.white);
    }//GEN-LAST:event_DAY1MouseEntered

    private void DAY1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DAY1MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        DAY1.setBorder(br);
        DAY1.setBackground(Color.white);
    }//GEN-LAST:event_DAY1MouseExited

    private void MONTH1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MONTH1MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        MONTH1.setBorder(br);
        MONTH1.setBackground(Color.white);
    }//GEN-LAST:event_MONTH1MouseEntered

    private void MONTH1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MONTH1MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        MONTH1.setBorder(br);
        MONTH1.setBackground(Color.white);
    }//GEN-LAST:event_MONTH1MouseExited

    private void YEAR1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YEAR1MouseEntered
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.blue);
        YEAR1.setBorder(br);
        YEAR1.setBackground(Color.white);
    }//GEN-LAST:event_YEAR1MouseEntered

    private void YEAR1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YEAR1MouseExited
        Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        YEAR1.setBorder(br);
        YEAR1.setBackground(Color.white);
    }//GEN-LAST:event_YEAR1MouseExited

    private void UPDATEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusGained

    private void UPDATEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusLost

    private void UPDATEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEMouseClicked

    private void UPDATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        UPDATE.setBorder(panelm);
        UPDATE.setBackground(Color.GREEN);
    }//GEN-LAST:event_UPDATEMouseEntered

    private void UPDATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseExited
        Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        UPDATE.setBorder(panelm);
        UPDATE.setBackground(Color.GRAY);
    }//GEN-LAST:event_UPDATEMouseExited

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
       
        if (verifydata())
        {
        try
        {
        String v1 = ID1.getText();
        String v2 = NAME1.getText();
        String v3 = RATE1.getText();
        String v4 = DAY1.getText();
        String v5 = MONTH1.getText();
        String v6 = YEAR1.getText();
        
        Class.forName("com.mysql.jdbc.Driver");
        Connection cons = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
        
        String str = "UPDATE akluj_update SET ID='"+v1+"', NAME='"+v2+"', RATE='"+v3+"', DAY='"+v4+"', MONTH='"+v5+"', YEAR='"+v6+"' WHERE ID='"+v1+"' ";
        pst=cons.prepareStatement(str);
        pst.execute();
        JOptionPane.showMessageDialog(null,ID1.getText() +""+ "IS UPDATED SUCESSFULLY ");
        
        }catch(Exception e){JOptionPane.showMessageDialog(null,"INVALID");}
        
        }
    }//GEN-LAST:event_UPDATEActionPerformed

    private void DELETEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusGained

    private void DELETEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusLost

    private void DELETEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEMouseClicked

    private void DELETEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GREEN);
        DELETE.setBorder(panelm);
        DELETE.setBackground(Color.GREEN);
    }//GEN-LAST:event_DELETEMouseEntered

    private void DELETEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseExited
        Border panelm = BorderFactory.createMatteBorder(0, 0, 0, 0, Color.GRAY);
        DELETE.setBorder(panelm);
        DELETE.setBackground(Color.GRAY);
    }//GEN-LAST:event_DELETEMouseExited

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        
        if(verifydata())
        {
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection cos = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
            String dele = "DELETE FROM `akluj_update` WHERE ID=?";
            PreparedStatement pstm = cos.prepareStatement(dele);
            pstm.setString(1,ID1.getText());
            pstm.executeUpdate();
            JOptionPane.showMessageDialog(null,ID1.getText()+" "+"RECORD'S ARE DELETED SUCESSFULLY");
            
        
        
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(this," INVALID");
        }
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void ID1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ID1KeyReleased

    private void BACKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseClicked
        APMCADMINS_LOGIN LG = new APMCADMINS_LOGIN();
        LG.show();
        dispose();
    }//GEN-LAST:event_BACKMouseClicked

    private void BACKMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseEntered
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        BACK.setBorder(panelm);
    }//GEN-LAST:event_BACKMouseEntered

    private void BACKMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseExited
        Border panelm = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        BACK.setBorder(panelm);
    }//GEN-LAST:event_BACKMouseExited

    private void CLOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseClicked
        this.dispose();
    }//GEN-LAST:event_CLOSMouseClicked

    private void CLOSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.red);
        CLOS.setBorder(panelCE);
    }//GEN-LAST:event_CLOSMouseEntered

    private void CLOSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        CLOS.setBorder(panelCE);
    }//GEN-LAST:event_CLOSMouseExited

    private void MINMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseEntered

    private void MINMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.BLACK);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseExited

    private void MINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseClicked
        this.setExtendedState(AKLUJ_UPDATE.ICONIFIED);// TODO add your handling code here:
    }//GEN-LAST:event_MINMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AKLUJ_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AKLUJ_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AKLUJ_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AKLUJ_UPDATE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AKLUJ_UPDATE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AK_UPDATE;
    private javax.swing.JLabel BACK;
    private javax.swing.JLabel CLOS;
    private javax.swing.JTextField DAY1;
    private javax.swing.JButton DELETE;
    private javax.swing.JTextField ID1;
    private javax.swing.JButton INSERT_BT;
    private javax.swing.JButton INSERT_DBBTN;
    private javax.swing.JLabel MAINWALL2;
    private javax.swing.JLabel MIN;
    private javax.swing.JTextField MONTH1;
    private javax.swing.JTextField NAME1;
    private javax.swing.JTextField RATE1;
    private javax.swing.JButton UPDATE;
    private javax.swing.JTextField YEAR1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
