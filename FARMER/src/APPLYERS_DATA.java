
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author R K PC
 */
public class APPLYERS_DATA extends javax.swing.JFrame {

   PreparedStatement p,ps;
   ResultSet R,rs;
   Connection con,cons;
   
    public APPLYERS_DATA() {
        initComponents();
        
        String url = "jdbc:mysql://localhost:3306/farm in hand";
        String user ="root";
        String pass ="";
        try
        {
            cons = DriverManager.getConnection(url,user,pass);
        }
        catch (Exception e)
        {}
    
    this.setLocationRelativeTo(null);
    
    
    Border br = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        
        CLOSE.setBorder(br);
        MIN.setBorder(br);
        BACK.setBorder(br);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        APPLYTABLE = new javax.swing.JTable();
        SEE_APPLYER = new javax.swing.JButton();
        BACK = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        MIN = new javax.swing.JLabel();
        CLOSE = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        APPLYTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FIRST NAME", "LAST NAME", "USER ID", "PASSWORD", "CON PASSWORD", "LICENCE NO", "ISSUED AUTHORITY", "MOBILE NO", "PAN NO", "APMC NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(APPLYTABLE);
        if (APPLYTABLE.getColumnModel().getColumnCount() > 0) {
            APPLYTABLE.getColumnModel().getColumn(0).setPreferredWidth(6);
            APPLYTABLE.getColumnModel().getColumn(1).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(3).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(5).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(6).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(7).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(8).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(9).setResizable(false);
            APPLYTABLE.getColumnModel().getColumn(10).setResizable(false);
        }

        SEE_APPLYER.setBackground(new java.awt.Color(128, 128, 128));
        SEE_APPLYER.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        SEE_APPLYER.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/flow-chart-24.png"))); // NOI18N
        SEE_APPLYER.setText(" SEE ALL");
        SEE_APPLYER.setBorder(null);
        SEE_APPLYER.setBorderPainted(false);
        SEE_APPLYER.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SEE_APPLYER.setOpaque(false);
        SEE_APPLYER.setSelected(true);
        SEE_APPLYER.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SEE_APPLYERFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SEE_APPLYERFocusLost(evt);
            }
        });
        SEE_APPLYER.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SEE_APPLYERMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SEE_APPLYERMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SEE_APPLYERMouseExited(evt);
            }
        });
        SEE_APPLYER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEE_APPLYERActionPerformed(evt);
            }
        });

        BACK.setBackground(new java.awt.Color(128, 128, 128));
        BACK.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        BACK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/arrow-98-24.png"))); // NOI18N
        BACK.setBorder(null);
        BACK.setBorderPainted(false);
        BACK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BACK.setOpaque(false);
        BACK.setSelected(true);
        BACK.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                BACKFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                BACKFocusLost(evt);
            }
        });
        BACK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BACKMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BACKMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BACKMouseExited(evt);
            }
        });
        BACK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BACKActionPerformed(evt);
            }
        });

        DELETE.setBackground(new java.awt.Color(128, 128, 128));
        DELETE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/delete-24.png"))); // NOI18N
        DELETE.setText(" DELETE REC");
        DELETE.setBorder(null);
        DELETE.setBorderPainted(false);
        DELETE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DELETE.setOpaque(false);
        DELETE.setSelected(true);
        DELETE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DELETEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DELETEFocusLost(evt);
            }
        });
        DELETE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DELETEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DELETEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DELETEMouseExited(evt);
            }
        });
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        UPDATE.setBackground(new java.awt.Color(128, 128, 128));
        UPDATE.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/available-updates-24.png"))); // NOI18N
        UPDATE.setText(" UPDATE REC");
        UPDATE.setBorder(null);
        UPDATE.setBorderPainted(false);
        UPDATE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UPDATE.setOpaque(false);
        UPDATE.setSelected(true);
        UPDATE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UPDATEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                UPDATEFocusLost(evt);
            }
        });
        UPDATE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPDATEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                UPDATEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                UPDATEMouseExited(evt);
            }
        });
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });

        MIN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/MINIM.png"))); // NOI18N
        MIN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MINMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MINMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MINMouseExited(evt);
            }
        });

        CLOSE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMEAGES/redclose.png"))); // NOI18N
        CLOSE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CLOSE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CLOSEMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CLOSEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CLOSEMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(MIN, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CLOSE, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BACK, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SEE_APPLYER, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MIN, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CLOSE, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DELETE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SEE_APPLYER, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(BACK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SEE_APPLYERFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SEE_APPLYERFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_SEE_APPLYERFocusGained

    private void SEE_APPLYERFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SEE_APPLYERFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_SEE_APPLYERFocusLost

    private void SEE_APPLYERMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEE_APPLYERMouseClicked
        /* String sql = "SELECT * FROM `hostdatabase`";
        try
        {
            PreparedStatement ps = cons.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel TBmodel = (DefaultTableModel)HOSTTABLE.getModel();
            TBmodel.setNumRows(0);
            while (rs.next())
            {
                TBmodel.addRow(new String[]{rs.getString(1),rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6),rs.getString(7),rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11)});

            }

        }catch(Exception e){}*/
    }//GEN-LAST:event_SEE_APPLYERMouseClicked

    private void SEE_APPLYERMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEE_APPLYERMouseEntered
        Border panelA = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GREEN);
        SEE_APPLYER.setBorder(panelA);
        SEE_APPLYER.setBackground(Color.GREEN);
    }//GEN-LAST:event_SEE_APPLYERMouseEntered

    private void SEE_APPLYERMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SEE_APPLYERMouseExited
        Border panelA = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GRAY);
        SEE_APPLYER.setBorder(panelA);
        SEE_APPLYER.setBackground(Color.GRAY);
    }//GEN-LAST:event_SEE_APPLYERMouseExited

    private void SEE_APPLYERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEE_APPLYERActionPerformed

        String sql = "SELECT * FROM `host_page`";
        try
        {
            PreparedStatement ps = cons.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            DefaultTableModel TBmodel = (DefaultTableModel)APPLYTABLE.getModel();
            TBmodel.setNumRows(0);
            while (rs.next())
            {
                TBmodel.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7),rs.getString(8),rs.getString(9), rs.getString(10), rs.getString(11)});

            }

        }catch(Exception e){}
    }//GEN-LAST:event_SEE_APPLYERActionPerformed

    private void BACKFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BACKFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_BACKFocusGained

    private void BACKFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_BACKFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_BACKFocusLost

    private void BACKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseClicked
        APMCS AP = new APMCS();
        AP.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BACKMouseClicked

    private void BACKMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseEntered
        Border panelA = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GREEN);
        BACK.setBorder(panelA);
        BACK.setBackground(Color.GREEN);
    }//GEN-LAST:event_BACKMouseEntered

    private void BACKMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BACKMouseExited
        Border panelA = BorderFactory.createMatteBorder(3, 3, 3, 3, Color.GRAY);
        BACK.setBorder(panelA);
        BACK.setBackground(Color.GRAY);
    }//GEN-LAST:event_BACKMouseExited

    private void BACKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BACKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BACKActionPerformed

    private void DELETEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusGained

    private void DELETEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELETEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEFocusLost

    private void DELETEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEMouseClicked

    private void DELETEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseEntered
        Border panelA = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GREEN);
        DELETE.setBorder(panelA);
        DELETE.setBackground(Color.GREEN);
        
        
    }//GEN-LAST:event_DELETEMouseEntered

    private void DELETEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DELETEMouseExited
        Border panelA = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GRAY);
        DELETE.setBorder(panelA);
        DELETE.setBackground(Color.GRAY);
        
    }//GEN-LAST:event_DELETEMouseExited

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DELETEActionPerformed

    private void UPDATEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusGained

    private void UPDATEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UPDATEFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEFocusLost

    private void UPDATEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_UPDATEMouseClicked

    private void UPDATEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseEntered
        Border panelA = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GREEN);
        UPDATE.setBorder(panelA);
        UPDATE.setBackground(Color.GREEN);
        
        
    }//GEN-LAST:event_UPDATEMouseEntered

    private void UPDATEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPDATEMouseExited
        Border panelA = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.GRAY);
        UPDATE.setBorder(panelA);
        UPDATE.setBackground(Color.GRAY);
        
        
    }//GEN-LAST:event_UPDATEMouseExited

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
        
//        if(ID2.getText().equals("") || NAME2.getText().equals("") || RATE2.getText().equals("") || DAY2.getText().equals("") || MONTH2.getText().equals("") || YEAR2.getText().equals(""))
//                  {
//                      JOptionPane.showMessageDialog(null, "It is mandatory to fill in what you want to update");
//                      System.exit(0);
//                  }      
// 
//        
//        try
//        {
//        String v1 = ID2.getText();
//        String v2 = NAME2.getText();
//        String v3 = RATE2.getText();
//        String v4 = DAY2.getText();
//        String v5 = MONTH2.getText();
//        String v6 = YEAR2.getText();
//        
//        Class.forName("com.mysql.jdbc.Driver");
//        Connection cons = DriverManager.getConnection("jdbc:mysql://localhost:3306/farm in hand","root","");
//        
//        String str = "UPDATE bmt_update SET ID='"+v1+"', NAME='"+v2+"', RATE='"+v3+"', DAY='"+v4+"', MONTH='"+v5+"', YEAR='"+v6+"' WHERE ID='"+v1+"' ";
//        pst=cons.prepareStatement(str);
//        pst.execute();
//        JOptionPane.showMessageDialog(null,ID2.getText() +" "+ "IS UPDATED SUCESSFULLY ");
//        
//        }catch(Exception e)
//        {
//            JOptionPane.showMessageDialog(null,"INVALID");
//        }
        
        
    }//GEN-LAST:event_UPDATEActionPerformed

    private void MINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseClicked
        this.setExtendedState(APMCS.ICONIFIED);// TODO add your handling code here:
    }//GEN-LAST:event_MINMouseClicked

    private void MINMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.GRAY);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseEntered

    private void MINMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MINMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        MIN.setBorder(panelCE);
    }//GEN-LAST:event_MINMouseExited

    private void CLOSEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSEMouseClicked
        this.dispose();
    }//GEN-LAST:event_CLOSEMouseClicked

    private void CLOSEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSEMouseEntered
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.red);
        CLOSE.setBorder(panelCE);
    }//GEN-LAST:event_CLOSEMouseEntered

    private void CLOSEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLOSEMouseExited
        Border panelCE = BorderFactory.createMatteBorder(2, 2, 2, 2, Color.black);
        CLOSE.setBorder(panelCE);
    }//GEN-LAST:event_CLOSEMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(APPLYERS_DATA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(APPLYERS_DATA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(APPLYERS_DATA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(APPLYERS_DATA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APPLYERS_DATA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable APPLYTABLE;
    private javax.swing.JButton BACK;
    private javax.swing.JLabel CLOSE;
    private javax.swing.JButton DELETE;
    private javax.swing.JLabel MIN;
    private javax.swing.JButton SEE_APPLYER;
    private javax.swing.JButton UPDATE;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
